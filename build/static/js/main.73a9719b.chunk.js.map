{"version":3,"sources":["util.js","Components/BaseTable.jsx","Components/ResortTable.jsx","Components/SnowTable.jsx","Components/DataTable.jsx","Global/AnimatedBG.jsx","Global/Header.jsx","Components/Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["API","APP_ID","process","APP_KEY","HEADERS","Accept","getData","type","resort_id","URL","concat","axios","get","headers","params","app_id","app_key","getForecast","num_days","interval","num_of_days","OPTIONS","text","value","id","getLevel","data","level","arr","forecast","forEach","item","push","ResortTable","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSort","clickedColumn","_this$state","state","column","direction","setState","reverse","_","sortBy","nextProps","_this2","_this$state2","name","react_default","a","createElement","Table","sortable","celled","fixed","Header","Row","HeaderCell","colSpan","sorted","onClick","Body","map","_ref","i","temp_c","feelslike_c","freshsnow_cm","winddir_compass","windspd_kts","windgst_kts","wx_desc","key","Cell","Component","_this$props","resortName","forecastDate","time","frzglvl_m","rain_mm","snow_mm","totalcloud_pct","vis_km","SubTitle","styled","h2","_templateObject","SnowTable","console","log","resortname","conditions","newsnow_cm","lastsnow","uppersnow_cm","lowersnow_cm","reporttime","pctopen","DataTable","handleSelectResort","e","val","newDate","Date","date","getDate","month","getMonth","year","getFullYear","today","getDay","resortSelected","snowReports","resortForecast","snowArray","values","activeTable","base","mid","upper","Components_SnowTable","Dropdown","options","placeholder","fluid","selection","onChange","Divider","horizontal","undefined","Components_ResortTable","showUpperTable","BaseTable","AnimateGradient","keyframes","AnimatedBG_templateObject","Speed","speed","colours","Background","div","attrs","height","_templateObject2","AnimatedBG","children","Title","h1","Header_templateObject","Header_templateObject2","Global_AnimatedBG","Header_SubTitle","StyledContainer","Home_templateObject","Home","asyncToGenerator","regenerator_default","mark","_callee","option","wrap","_context","prev","next","filter","then","req","sent","getLevels","stop","_x","apply","arguments","selectedResort","setActiveTable","Global_Header","Container","Grid","stackable","textAlign","Column","width","Button","primary","secondary","Components_DataTable","divided","React","App","setData","t0","t1","t2","t3","Westendorf","Kitzbuhl","Emlau","Saalbach","target","Components_Home","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73a9719b.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst API = 'http://api.weatherunlocked.com/api'\nconst APP_ID = process.env.REACT_APP_WEATHER_APP_CODE\nconst APP_KEY = process.env.REACT_APP_WEATHER_API_KEY\n\nconst HEADERS = {\n  Accept: 'application/json'\n}\n\nexport function getData(type, resort_id) {\n  const URL = `${API}/${type}/${resort_id}?`\n  return axios.get(URL, {\n    headers: HEADERS,\n    params: {\n      app_id: APP_ID,\n      app_key: APP_KEY\n    }\n  })\n}\n\nexport function getForecast(resort_id, num_days, interval) {\n  const URL = `${API}/resortforecast/${resort_id}`\n  return axios.get(URL, {\n    headers: HEADERS,\n    params: {\n      num_of_days: num_days,\n      app_id: APP_ID,\n      app_key: APP_KEY\n    }\n  })\n}\n\nexport const OPTIONS = [\n  {\n    text: 'Westendorf',\n    value: 'Westendorf',\n    id: 222036\n  },\n  {\n    text: 'Kitzbuhl',\n    value: 'Kitzbuhl',\n    id: 222013\n  },\n  {\n    text: 'Ellmau',\n    value: 'Ellmau',\n    id: 222023\n  },\n  {\n    text: 'Jochberg',\n    value: 'Jochberg',\n    id: 222018\n  },\n  {\n    text: 'Saalbach',\n    value: 'Saalbach',\n    id: 54884231\n  }\n]\n\nexport function getResortForecastToday(place) {\n  return getForecast(place, 1, 6).then(req => req.data)\n}\n\nexport function getDate() {\n  const days = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday'\n  ]\n\n  const newDate = new Date()\n  const date = newDate.getDate()\n  const month = newDate.getMonth()\n  const year = newDate.getFullYear()\n  const today = days[newDate.getDay()]\n  return `${today} ${date}/${month}/${year}`\n}\n\nexport function getLevel(data, level) {\n  let arr = [];\n  data.forecast.forEach(item => {\n    arr.push(item[level])\n  })\n  return arr\n}","import React, { Component } from 'react'\n\nimport { Table } from 'semantic-ui-react'\nimport _ from 'lodash'\n\nclass ResortTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.data\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.data !== this.props.data) {\n      this.setState({\n        data: nextProps.data\n      })\n    }\n  }\n\n  handleSort = clickedColumn => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending'\n      })\n\n      return\n    }\n\n    this.setState({\n      forecast: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending'\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n    const { name } = this.props\n    return (\n      <div>\n        <Table sortable celled fixed>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"7\">{name}</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                sorted={column === 'temp_c' ? direction : null}\n                onClick={() => this.handleSort('temp_c')}\n              >\n                Temp °C\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'feelslike_c' ? direction : null}\n                onClick={() => this.handleSort('feelslike_c')}\n              >\n                Feels Like\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'freshsnow_cm' ? direction : null}\n                onClick={() => this.handleSort('freshsnow_cm')}\n              >\n                Fresh Snow (cm)\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'winddir_compass' ? direction : null}\n                onClick={() => this.handleSort('winddir_compass')}\n              >\n                Wind Direction\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'windspd_kts' ? direction : null}\n                onClick={() => this.handleSort('windspd_kts')}\n              >\n                Wind Speed (knots)\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'windgst_kts' ? direction : null}\n                onClick={() => this.handleSort('windgst_kts')}\n              >\n                Wind Gust (knots)\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'wx_desc' ? direction : null}\n                onClick={() => this.handleSort('wx_desc')}\n              >\n                Weather Desc.\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {_.map(\n              data,\n              (\n                {\n                  temp_c,\n                  feelslike_c,\n                  freshsnow_cm,\n                  winddir_compass,\n                  windspd_kts,\n                  windgst_kts,\n                  wx_desc\n                },\n                i\n              ) => (\n                <Table.Row key={i}>\n                  <Table.Cell>{temp_c} °C</Table.Cell>\n                  <Table.Cell>{feelslike_c} °C</Table.Cell>\n                  <Table.Cell>{freshsnow_cm} cm</Table.Cell>\n                  <Table.Cell>{winddir_compass}</Table.Cell>\n                  <Table.Cell>{windspd_kts}</Table.Cell>\n                  <Table.Cell>{windgst_kts}</Table.Cell>\n                  <Table.Cell>{wx_desc}</Table.Cell>\n                </Table.Row>\n              )\n            )}\n          </Table.Body>\n        </Table>\n      </div>\n    )\n  }\n}\n\nexport default ResortTable\n","import React, { Component } from 'react'\n\nimport { Table } from 'semantic-ui-react'\nimport _ from 'lodash'\n\nclass ResortTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      column: null,\n      direction: null,\n      data: this.props.data,\n      forecast: this.props.data.forecast\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.data !== this.props.data) {\n      this.setState({\n        data: nextProps.data,\n        forecast: nextProps.data.forecast\n      })\n    }\n  }\n\n  handleSort = clickedColumn => {\n    const { column, forecast, direction } = this.state\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        forecast: _.sortBy(forecast, [clickedColumn]),\n        direction: 'ascending'\n      })\n      return\n    }\n    this.setState({\n      forecast: forecast.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending'\n    })\n  }\n\n  render() {\n    const { column, forecast, direction } = this.state\n    const { resortName, forecastDate } = this.props\n    return (\n      <div>\n        <Table sortable celled fixed>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell colSpan=\"6\">\n                {resortName} Forecast for {forecastDate}{' '}\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                sorted={column === 'time' ? direction : null}\n                onClick={() => this.handleSort('time')}\n              >\n                Time\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'frzglvl_m' ? direction : null}\n                onClick={() => this.handleSort('frzglvl_m')}\n              >\n                Freezing Level (m)\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'rain_mm' ? direction : null}\n                onClick={() => this.handleSort('newsnow_cm')}\n              >\n                Rain (mm)\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'snow_mm' ? direction : null}\n                onClick={() => this.handleSort('snow_mm')}\n              >\n                Snow (mm)\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'totalcloud_pct' ? direction : null}\n                onClick={() => this.handleSort('totalcloud_pct')}\n              >\n                Total Cloud Cover\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'vis_km' ? direction : null}\n                onClick={() => this.handleSort('vis_km')}\n              >\n                Visibility (km)\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {_.map(\n              forecast,\n              (\n                { time, frzglvl_m, rain_mm, snow_mm, totalcloud_pct, vis_km },\n                i\n              ) => (\n                <Table.Row key={i}>\n                  <Table.Cell>{time}</Table.Cell>\n                  <Table.Cell>{frzglvl_m} m</Table.Cell>\n                  <Table.Cell>{rain_mm} mm</Table.Cell>\n                  <Table.Cell>{snow_mm} mm</Table.Cell>\n                  <Table.Cell>{totalcloud_pct} %</Table.Cell>\n                  <Table.Cell>{vis_km} km</Table.Cell>\n                </Table.Row>\n              )\n            )}\n          </Table.Body>\n        </Table>\n      </div>\n    )\n  }\n}\n\nexport default ResortTable\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport _ from 'lodash'\nimport { Table } from 'semantic-ui-react'\n\nconst SubTitle = styled.h2`\n  text-align: center;\n  font-size: 2.5em;\n  color: #3f51b5;\n`\nclass SnowTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      column: null,\n      data: this.props.data,\n      direction: null\n    }\n  }\n\n  handleSort = clickedColumn => () => {\n    const { column, data, direction } = this.state\n\n    if (column !== clickedColumn) {\n      this.setState({\n        column: clickedColumn,\n        data: _.sortBy(data, [clickedColumn]),\n        direction: 'ascending'\n      })\n\n      return\n    }\n\n    this.setState({\n      data: data.reverse(),\n      direction: direction === 'ascending' ? 'descending' : 'ascending'\n    })\n  }\n\n  render() {\n    const { column, data, direction } = this.state\n    console.log(data)\n    return (\n      <div>\n        <Table sortable celled fixed>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell\n                sorted={column === 'resortname' ? direction : null}\n                onClick={this.handleSort('resortname')}\n              >\n                Resort Name\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'conditions' ? direction : null}\n                onClick={this.handleSort('conditions')}\n              >\n                Conditions\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'newsnow_cm' ? direction : null}\n                onClick={this.handleSort('newsnow_cm')}\n              >\n                New Snow (cm)\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'lastsnow' ? direction : null}\n                onClick={this.handleSort('lastsnow')}\n              >\n                Last Snow\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'uppersnow_cm' ? direction : null}\n                onClick={this.handleSort('uppersnow_cm')}\n              >\n                Upper Snow (cm)\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'lowersnow_cm' ? direction : null}\n                onClick={this.handleSort('lowersnow_cm')}\n              >\n                Lower Snow (cm)\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'reporttime' ? direction : null}\n                onClick={this.handleSort('reporttime')}\n              >\n                Report Time\n              </Table.HeaderCell>\n              <Table.HeaderCell\n                sorted={column === 'pctopen' ? direction : null}\n                onClick={this.handleSort('pctopen')}\n              >\n                Percentage of Runs Open\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {_.map(\n              data,\n              (\n                {\n                  resortname,\n                  conditions,\n                  newsnow_cm,\n                  lastsnow,\n                  uppersnow_cm,\n                  lowersnow_cm,\n                  reporttime,\n                  pctopen\n                },\n                i\n              ) => (\n                <Table.Row key={i}>\n                  <Table.Cell>{resortname}</Table.Cell>\n                  <Table.Cell>{conditions}</Table.Cell>\n                  <Table.Cell>{newsnow_cm} cm</Table.Cell>\n                  <Table.Cell>{lastsnow}</Table.Cell>\n                  <Table.Cell>{uppersnow_cm} cm</Table.Cell>\n                  <Table.Cell>{lowersnow_cm} cm</Table.Cell>\n                  <Table.Cell>{reporttime}</Table.Cell>\n                  <Table.Cell>{pctopen} %</Table.Cell>\n                </Table.Row>\n              )\n            )}\n          </Table.Body>\n        </Table>\n        <SubTitle>We're sucking diesel now!</SubTitle>\n      </div>\n    )\n  }\n}\n\nexport default SnowTable\n","import { Divider, Dropdown } from 'semantic-ui-react'\nimport { OPTIONS, getDate } from '../util'\nimport React, { Component } from 'react'\n\nimport BaseTable from './BaseTable'\nimport ResortTable from './ResortTable'\nimport SnowTable from './SnowTable'\n\nclass DataTable extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {}\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { snowReports, resortForecast } = nextProps\n\n    if (snowReports !== this.props.snowReports) {\n      const snowArray = Object.values(snowReports)\n      this.setState({ snowReports: snowArray })\n    }\n\n    if (resortForecast !== this.props.resortForecast) {\n      this.setState({ resortForecast })\n    }\n  }\n\n  handleSelectResort = (e, val) => {\n    this.props.handleSelectResort(val.value)\n    const resortName = val.value\n\n    const forecastDate = getDate()\n\n    this.setState({ resortSelected: true, resortName, forecastDate })\n  }\n\n  render() {\n    const { activeTable, resortForecast, base, mid, upper } = this.props\n    const { snowReports, resortName, forecastDate } = this.state\n    return (\n      <div>\n        {activeTable && activeTable === 'snowReport' && (\n          <SnowTable data={snowReports} />\n        )}\n        {activeTable && activeTable === 'resortForecast' && (\n          <div>\n            <Dropdown\n              options={OPTIONS}\n              placeholder=\"Select a Spot\"\n              fluid\n              selection\n              onChange={(e, val) => this.handleSelectResort(e, val)}\n            />\n            <Divider horizontal />\n          </div>\n        )}\n\n        {resortForecast !== undefined && activeTable === 'resortForecast' && (\n          <div>\n            <ResortTable\n              data={resortForecast}\n              resortName={resortName}\n              forecastDate={forecastDate}\n              showUpperTable={e => this.showUpperTable(e)}\n            />\n            <Divider horizontal />\n            <BaseTable data={base} name=\"Bottom of the Mountain\" />\n            <Divider horizontal />\n            <BaseTable data={mid} name=\"Middle Station\" />\n            <Divider horizontal />\n            <BaseTable data={upper} name=\"Top of the Mountain\" />\n            <Divider horizontal />\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default DataTable\n","import React from 'react'\nimport styled, { keyframes } from 'styled-components'\n\nconst AnimateGradient = keyframes`\n  0% { background-position: 0% 50% }\n\n  50% { background-position: 100% 50% }\n\n  100% { background-position: 0% 50% }\n`\nconst Speed = props => props.speed || '20s'\n\nconst colours = '-15deg, #2c387e, #3f51b5, #6573c3, #ffa733, #ff9100'\n\nconst animationType = 'ease infinite'\n\nconst Background = styled.div.attrs(props => ({\n  height: props.height || '150px'\n}))`\n  height: ${props => props.height};\n\n  background: -ms-linear-gradient(${colours});\n  background: -moz-linear-gradient(${colours});\n  background: -o-linear-gradient(${colours});\n  background: -webkit-linear-gradient(${colours});\n  background: linear-gradient(${colours});\n\n  background-size: 400% 400%;\n\n  -webkit-animation: ${AnimateGradient} ${Speed} ${animationType};\n  -ms-animation: ${AnimateGradient} ${Speed} ${animationType};\n  -moz-animation: ${AnimateGradient} ${Speed} ${animationType};\n  -o-animation: ${AnimateGradient} ${Speed} ${animationType};\n  animation: ${AnimateGradient} ${Speed} ${animationType};\n`\n\nconst AnimatedBG = props => {\n  return (\n    <Background height={props.height} speed={props.speed}>\n      {props.children}\n    </Background>\n  )\n}\n\nexport default AnimatedBG\n","import React from 'react'\nimport AnimatedBG from './AnimatedBG'\nimport styled from 'styled-components'\n\nconst Title = styled.h1`\n  font-family: 'Aleo', serif;\n  font-size: 4em;\n  font-weight: 300;\n  text-align: center;\n  color: white;\n  padding-top: 2%;\n`\n\nconst SubTitle = styled.h1`\nfont-family: 'Aleo', serif;\nfont-style: 'italic';\nfont-size: 2em;\nfont-weight: 300;\ntext-align: center;\ncolor: white;\n`\n\nconst Header = () => {\n  return (\n    <div>\n      <AnimatedBG speed=\"20s\" height=\"175px\">\n      <Title>Rogger's SchneeCast 2018-2019</Title>\n      <SubTitle>- a great piece of kit!</SubTitle>\n      </AnimatedBG>\n    </div>\n  )\n}\n\nexport default Header\n","import { Button, Container, Grid } from 'semantic-ui-react'\nimport { OPTIONS, getForecast, getLevel } from '../util'\n\nimport DataTable from './DataTable'\nimport Header from '../Global/Header'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst StyledContainer = styled.div`\n  padding-top: 50px;\n`\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedResort: {}\n    }\n  }\n\n  handleSelectResort = async value => {\n    const option = OPTIONS.filter(item => {\n      return item.value === value ? item : null\n    })\n\n    const id = option[0].id\n    const resortForecast = await getForecast(id, 1).then(req => req.data)\n\n    this.getLevels(resortForecast)\n\n    this.setState({ resortForecast })\n  }\n\n  getLevels(data) {\n    const base = getLevel(data, 'base')\n    const mid = getLevel(data, 'mid')\n    const upper = getLevel(data, 'upper')\n    this.setState({ base, mid, upper })\n  }\n\n  render() {\n    const { setActiveTable, activeTable, snowReports } = this.props\n\n    const { resortForecast, base, mid, upper } = this.state\n\n    return (\n      <div>\n        <Header />\n        <StyledContainer>\n          <Container>\n            <Grid stackable textAlign=\"center\">\n              <Grid.Row>\n                <Grid.Column width={8} textAlign=\"center\">\n                  <Button\n                    primary\n                    value=\"snowReport\"\n                    onClick={e => {\n                      setActiveTable(e)\n                    }}\n                  >\n                    Snow Report\n                  </Button>\n                </Grid.Column>\n                <Grid.Column width={8} textAlign=\"center\">\n                  <Button\n                    secondary\n                    value=\"resortForecast\"\n                    onClick={e => {\n                      setActiveTable(e)\n                    }}\n                  >\n                    Resort Forecast\n                  </Button>\n                </Grid.Column>\n              </Grid.Row>\n              <DataTable\n                activeTable={activeTable}\n                snowReports={snowReports}\n                handleSelectResort={this.handleSelectResort}\n                resortForecast={resortForecast}\n                base={base}\n                mid={mid}\n                upper={upper}\n              />\n              <Grid.Row divided />\n            </Grid>\n          </Container>\n        </StyledContainer>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React, { Component } from 'react'\nimport { getData } from './util'\nimport Home from './Components/Home'\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      activeTable: null\n    }\n    this.setData()\n  }\n\n  setData = async () => {\n    const snowReports = {\n      Westendorf: await getData('snowreport', 222036).then(req => req.data),\n      Kitzbuhl: await getData('snowreport', 222013).then(req => req.data),\n      Emlau: await getData('snowreport', 222023).then(req => req.data),\n      Saalbach: await getData('snowreport', 222018).then(req => req.data)\n    }\n\n    this.setState({\n      snowReports,\n    })\n  }\n\n  setActiveTable = e => {\n    const value = e.target.value\n    this.setState({ activeTable: value })\n  }\n\n  render() {\n    const { activeTable, snowReports } = this.state\n    return (\n      <div>\n        <Home\n          setActiveTable={this.setActiveTable}\n          activeTable={activeTable}\n          snowReports={snowReports}\n        />\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}